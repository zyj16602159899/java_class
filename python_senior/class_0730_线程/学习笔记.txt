并行：真的多任务（任务数小于等于cpu的核数）
并发：假的多任务（任务数大于cpu的核数）
时间片轮转

t.start()只会创建一个线程，而这个线程只能执行run方法
启动线程，会自动调用类里面的run方法（Run函数是必须的，写成其他的函数名调用不了）
因此，当类中包含多个方法时，要调用其他的方法，必须将他们添加到run方法中，才能进行调用

多线程之间共享全局变量

在一个函数中对全局变量进行修改时，到底是否需要使用global，需要看是否对全局变量的指向进行了修改：
如果修改了指向，即让全局变量指向了一个新的地方，那么必须使用global
如果仅仅修改了指向空间中的数据（如向列表插入一个值），此时不用必须使用global

CPU密集型操作和IO密集型操作
CPU密集型操作
在我们的计算机中，需要大量用到CPU计算的事情，我们称为CPU密集型操作。
如，计算9的一亿次方，这种大型的运算，或者是进行文件格式的转换，这些都是属于CPU密集型操作。

IO密集型操作
所谓IO密集型操作，就是涉及到大量的输入输出，比如频繁的数据库访问，频繁的web服务器访问，这种情况都属于IO密集型操作。