# 并发和性能

# 一、并发和并行

# 1.多任务
# 概念：简单来说，就是操作系统可以同时运行多个任务
# 真正的并行执行多任务只能在多核cpu上实现，但由于任务数量远远多于cpu的核心数量，所以操作系统也会自动把很多任务
# 轮流调度到每个核心上执行。

# 2.并发和并行
# 并发：指的是任务数多于cpu核数，通过操作系统的各种任务调度算法，实现用多个任务“一起”执行（实际上总有一些任务
# 不在执行，因为切换任务的速度相当快，看上去一起执行而已）
# 并行：指的是任务数小于等于cpu核数，即任务真的是一起执行的
# 串行

# 3.同步和异步
# 同步：即同步协调，是指线程在访问某一资源时，获得了资源的返回结果后才会执行其他操作（先做某件事，再做某件事）
# 异步：与同步相对，指线程在访问某一资源时，无论是否取得返回结果，都进行下一步操作；当有了资源返回结果时，系统
# 自会通知线程。


# 二、线程

# threading模块介绍
# 创建线程：threading.Thread(target=func)
# 参数target指定线程执行的任务（函数）
# 方法              # 说明









import time
import threading


def func1():
    for i in range(5):
        print('事情1')
        time.sleep(1)

def func2():
    for i in range(6):
        print('事情2')
        time.sleep(1)


t1 = threading.Thread(target=func1)     # 创建一个线程去执行事情1
t2 = threading.Thread(target=func2)     # 创建一个线程去执行事情2

t1.start()      #开始执行线程1
t2.start()      #开始执行线程2